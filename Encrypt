// ***********************************************
// Program Abstract
// This program encrypts a message after a key has been entered.
// ***********************************************

// ***********************************************
// Program Variable Dictionary
// topSecret is the encode object
// codeLine1-4 is the encrypted line
// line1-4 is the decoded line
// key is the key to the encryption
// loop is the ASC value after you transverse the codes 32 or 127
// lin is the line after its encoded
// workKey is the value of A - the key[j] value
// turner is the char after it is encoded
// change is the amount over 127 or under 32.
// ***********************************************
import java.io.*;
import java.util.Scanner;
import javax.swing.*;
public class ch_28_A {

    public static void main(String[] args) throws IOException
    {
    	String line1 = "How much wood would a wood chuck chuck";
		String line2 = "if a wood chuck would chuck wood?";
		String line3 = "He would chuck what a wood chuck COULD";
		String line4 = "if a wood chuck would chuck wood.";

		Encode topSecret = new Encode(line1, line2, line3, line4);
		topSecret.displayOriginalText();
		topSecret.enterKey();
		topSecret.encodeText();
		topSecret.displayEncodedText();
		topSecret.writeToFile();
    }
}
class Encode
{
	private String line1, line2, line3, line4;
	private String codeLine1, codeLine2, codeLine3, codeLine4;
	private String key;

	public Encode(String ln1, String ln2, String ln3, String ln4)
	{
		codeLine1 = ln1;
		codeLine2 = ln2;
		codeLine3 = ln3;
		codeLine4 = ln4;
		line1 = ln1;
		line2 = ln2;
		line3 = ln3;
		line4 = ln4;
	}
	public void displayOriginalText()
	{
		System.out.println("The original uncoded message is:\n");
		System.out.println(line1);
		System.out.println(line2);
		System.out.println(line3);
		System.out.println(line4);
		System.out.println();
	}
	public void enterKey()
	{
		Scanner input = new Scanner(System.in);
		System.out.print("Enter key --> ");
		// For the 90-point version the "key" is a single letter.
		// For the 100-point version, the "key" is a word.
		key = input.nextLine();
	}
	public String encodeLine(String line)
	{
		char k;
		int AscKey =0;
		int workKey =0;
		int j =0;
		int change= 0;
		int loop =0;
		char turner;
		String lin ="";
		int len = line.length();
		for (int i = 0; i < len;i++)
		{
			if(j>=key.length())
			{
				j=0;
				k = key.charAt(j);
				AscKey = (int)k;
				workKey = ((int)('A')-AscKey);
				j++;
			}
			else
			{
				k = key.charAt(j);
				AscKey = (int)k;
				workKey = ((int)('A')-AscKey);
				j++;
			}

			if ((((int)line.charAt(i))-workKey) < 32)
			{
				change= 32-(((int)line.charAt(i))-workKey);
				loop = 127-change;
				turner = (char)loop;
			}
			else if((((int)line.charAt(i))-workKey) >= 127)
			{
				change = (((int)line.charAt(i))-workKey)-127;
				loop = change+31;
				turner = (char)loop;
			}
			else
			{
				turner = (char)(((int)line.charAt(i))-workKey);
			}
			lin+=turner;
		}
		return lin;
	}
	public void encodeText()
	{
		System.out.println("\nEncoding the Text\n");
		codeLine1 = "";
		codeLine2 = "";
		codeLine3 = "";
		codeLine4 = "";
		codeLine1 = encodeLine(line1);
		codeLine2 = encodeLine(line2);
		codeLine3 = encodeLine(line3);
		codeLine4 = encodeLine(line4);
	}
	public void displayEncodedText()
	{
		System.out.println("The ENCODED message is:\n");
		System.out.println(codeLine1);
		System.out.println(codeLine2);
		System.out.println(codeLine3);
		System.out.println(codeLine4);
	}
	public void writeToFile() throws IOException
	{
		BufferedWriter outStream = new BufferedWriter(new FileWriter("code.dat"));
		System.out.println("Saving coded message\n");
		outStream.write(codeLine1);
		outStream.newLine();
		outStream.write(codeLine2);
		outStream.newLine();
		outStream.write(codeLine3);
		outStream.newLine();
		outStream.write(codeLine4);
		outStream.newLine();
		outStream.close();
	}
}
